name: Test Coverage

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    env:
      DJANGO_SETTINGS_MODULE: backend.settings.cicd
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      SECRET_KEY: test-secret-key-for-ci
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
      AWS_S3_REGION_NAME: ${{ secrets.AWS_S3_REGION_NAME }}

    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Stripe CLI
      run: |
        curl -s https://packages.stripe.dev/api/security/keypair/stripe-cli-gpg/public | gpg --dearmor | sudo tee /usr/share/keyrings/stripe.gpg
        echo "deb [signed-by=/usr/share/keyrings/stripe.gpg] https://packages.stripe.dev/stripe-cli-debian-local stable main" | sudo tee -a /etc/apt/sources.list.d/stripe.list
        sudo apt update
        sudo apt install stripe

    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage psycopg2-binary
    
    - name: Run tests with coverage
      working-directory: ./backend
      run: |
        coverage run --source='.' manage.py test
        coverage report --fail-under=80
        coverage xml
  
  cypree2ss-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.19.0

        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
    
    - name: Install Node.js dependencies
      run: npm install
    
    - name: Run Cypress tests
      uses: cypress-io/github-action@v6
      with:
        working-directory: ./frontend
        browser: chrome
        start: npm run dev       # ðŸ‘ˆ start Vite dev server
        wait-on: "http://localhost:5173"   # ðŸ‘ˆ wait until itâ€™s ready
        wait-on-timeout: 120
      env:
        SELFBASEURL: http://localhost:5173
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload Cypress artifacts
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: cypress-artifacts
        path: |
          cypress/screenshots
          cypress/videos
        retention-days: 7
  