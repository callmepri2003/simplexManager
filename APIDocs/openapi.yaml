openapi: 3.0.3
info:
  title: DRF + React Auth API
  version: 1.0.0

servers:
  - url: http://localhost:8000

paths:
  /api/token/:
    post:
      summary: Obtain JWT tokens
      description: Get access and refresh JWT tokens using username and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: admin
                password:
                  type: string
                  example: secret123
      responses:
        "200":
          description: Tokens returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    description: Access token
                  refresh:
                    type: string
                    description: Refresh token
        "401":
          description: Invalid credentials

  /api/token/refresh/:
    post:
      summary: Refresh JWT access token
      description: Use the refresh token to get a new access token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh
              properties:
                refresh:
                  type: string
                  description: Refresh token
      responses:
        "200":
          description: New access token returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    description: New access token
        "401":
          description: Invalid refresh token
  /api/groups/:
    get:
      summary: List groups
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Group"
    post:
      summary: Create a group
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Group"
      responses:
        "201":
          description: Group created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"

  /api/groups/{id}/:
    get:
      summary: Retrieve a group
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A group object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
    put:
      summary: Update a group
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Group"
      responses:
        "200":
          description: Group updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
    delete:
      summary: Delete a group
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Group deleted

components:
  schemas:
    Group:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Admins

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
